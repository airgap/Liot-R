var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,d,a){if(a.get||a.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[d]=a.value)};$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(b){return $jscomp.SYMBOL_PREFIX+(b||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var b=$jscomp.global.Symbol.iterator;b||(b=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[b]&&$jscomp.defineProperty(Array.prototype,b,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(b){var d=0;return $jscomp.iteratorPrototype(function(){return d<b.length?{done:!1,value:b[d++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(b){$jscomp.initSymbolIterator();b={next:b};b[$jscomp.global.Symbol.iterator]=function(){return this};return b};$jscomp.makeIterator=function(b){$jscomp.initSymbolIterator();var d=b[Symbol.iterator];return d?d.call(b):$jscomp.arrayIterator(b)};
$jscomp.checkStringArgs=function(b,d,a){if(null==b)throw new TypeError("The 'this' value for String.prototype."+a+" must not be null or undefined");if(d instanceof RegExp)throw new TypeError("First argument to String.prototype."+a+" must not be a regular expression");return b+""};
$jscomp.polyfill=function(b,d,a,c){if(d){a=$jscomp.global;b=b.split(".");for(c=0;c<b.length-1;c++){var e=b[c];e in a||(a[e]={});a=a[e]}b=b[b.length-1];c=a[b];d=d(c);d!=c&&null!=d&&$jscomp.defineProperty(a,b,{configurable:!0,writable:!0,value:d})}};$jscomp.polyfill("String.prototype.includes",function(b){return b?b:function(b,a){return-1!==$jscomp.checkStringArgs(this,b,"includes").indexOf(b,a||0)}},"es6-impl","es3");$jscomp.array=$jscomp.array||{};
$jscomp.iteratorFromArray=function(b,d){$jscomp.initSymbolIterator();b instanceof String&&(b+="");var a=0,c={next:function(){if(a<b.length){var e=a++;return{value:d(e,b[e]),done:!1}}c.next=function(){return{done:!0,value:void 0}};return c.next()}};c[Symbol.iterator]=function(){return c};return c};$jscomp.polyfill("Array.prototype.keys",function(b){return b?b:function(){return $jscomp.iteratorFromArray(this,function(b){return b})}},"es6-impl","es3");
var COMPARATORS="EQUALS NEQUALS TFNEQUALS OVER OVEROR UNDER UNDEROR".split(" "),OPERATORS="AND OR NAND NOR XOR SAME".split(" "),r=require("rethinkdb"),express=require("express"),bodyParser=require("body-parser"),app=express(),fs=require("fs"),CONFIG={port:7474};app.use(bodyParser.json());app.use(function(b,d,a){d.header("Access-Control-Allow-Origin","*");d.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept");a()});
var kRETURN_CHANGES={return_changes:!0},ADMINACTIONS={"list collectors":actionListCollectors,"add collectors":actionAddCollectors,"list filters":actionListFilters,"add filters":actionAddFilters,"list collators":actionListCollators,"add collators":actionAddCollators,"list distributors":actionListDistributors,"add distributors":actionAddDistributors,"alter distributors":actionModDistributors},PUBLICACTIONS={};readConfig();
function readConfig(){fs.readFile("liot-server-conf.json",function(b,d){if(d){var a=JSON.parse(d.toString());a.port&&(CONFIG.port=a.port);console.log(a)}startRethinkServer();launchHttpServer()})}
function startRethinkServer(){r.connect({host:"localhost"},function(b,d){b||!d?console.log("Cannot connect to RethinkDB"):r.dbList().contains("LiotR")["do"](function(a){return r.branch(a,{dbs_created:0},r.dbCreate("LiotR"))}).run(d,function(a,b){if(a||!d)return console.log("Could not ensure existence of database for Liot R."),!1;CONNECTION=d;d.use("LiotR");b.dbs_created?console.log("Created database for Liot R."):console.log("Found database for Liot R.");console.log("Connected to database for Liot R.");
return!0})})}function launchHttpServer(){app.post("/",rcvdPost);app.listen(CONFIG.port)}function rcvdPost(b,d){var a=b.connection.remoteAddress.match(/^(127.0.0.1|::ffff:127.0.0.1|::1)$/)&&!0;console.log(a);console.log(b.body);var c=b.body.action;d.header("Access-Control-Allow-Origin","*");if(c){var e=b.body;if(a&&c in ADMINACTIONS)ADMINACTIONS[c](b,d,e);else if(c in PUBLICACTIONS)PUBLICACTIONS[c](b,d,e)}}
function actionListCollators(b,d,a){var c=0,e=100;b=["smart","name","id"];var f="smart",g=["ascending","descending"],h="ascending";"number"==typeof a.after&&(c=a.after);"number"==typeof a.count&&0<=a.count&&1001>a.count&&(e=a.count);"string"===typeof a.order&&a.order in b&&(f=b[a.order]);"string"===typeof a.direction&&a.direction in g&&(h=a.direction);"descending"==h&&(f=r.desc(f));r.table("Collators").count().run(CONNECTION,function(a,b){a||(0>c&&(c+=b),c=Math.max(0,c),r.table("Collators").orderBy(f).slice(c,
c+e).merge(function(a){return{filtrets:r.table("Filters").getAll(r.args(a("filters"))).coerceTo("array")}}).coerceTo("array").run(CONNECTION,function(a,b){a?(d.send({err:"Unable to query."}),console.log(a)):(d.send({collators:b}),console.log("Queried collators."),console.log(b))}))})}
function actionListCollectors(b,d,a){var c=0,e=100;b=["smart","name","id"];var f="smart",g=["ascending","descending"],h="ascending";"number"==typeof a.after&&(c=a.after);"number"==typeof a.count&&0<=a.count&&1001>a.count&&(e=a.count);"string"===typeof a.order&&a.order in b&&(f=b[a.order]);"string"===typeof a.direction&&a.direction in g&&(h=a.direction);"descending"==h&&(f=r.desc(f));r.table("Collectors").count().run(CONNECTION,function(a,b){a||(0>c&&(c+=b),c=Math.max(0,c),r.table("Collectors").orderBy(f).slice(c,
c+e).coerceTo("array").run(CONNECTION,function(a,b){a?(d.send({err:"Unable to query."}),console.log(a)):(d.send({collectors:b}),console.log("Queried collectors."),console.log(b))}))})}
function actionListFilters(b,d,a){var c=0,e=100;b=["smart","name","id"];var f="smart",g=["ascending","descending"],h="ascending";"number"==typeof a.after&&(c=a.after);"number"==typeof a.count&&0<=a.count&&1001>a.count&&(e=a.count);"string"===typeof a.order&&a.order in b&&(f=b[a.order]);"string"===typeof a.direction&&a.direction in g&&(h=a.direction);"descending"==h&&(f=r.desc(f));r.table("Filters").count().run(CONNECTION,function(a,b){a||(0>c&&(c+=b),c=Math.max(0,c),r.table("Filters").orderBy(f).slice(c,
c+e).coerceTo("array").run(CONNECTION,function(a,b){a?(d.send({err:"Unable to query."}),console.log(a)):(d.send({filters:b}),console.log("Queried filters."),console.log(b))}))})}
function actionListDistributors(b,d,a){var c=0,e=100;b=["smart","name","id"];var f="smart",g=["ascending","descending"],h="ascending";"number"==typeof a.after&&(c=a.after);"number"==typeof a.count&&0<=a.count&&1001>a.count&&(e=a.count);"string"===typeof a.order&&a.order in b&&(f=b[a.order]);"string"===typeof a.direction&&a.direction in g&&(h=a.direction);"descending"==h&&(f=r.desc(f));r.table("Distributors").count().run(CONNECTION,function(a,b){a||(0>c&&(c+=b),c=Math.max(0,c),r.table("Distributors").orderBy(f).slice(c,
c+e).coerceTo("array").run(CONNECTION,function(a,b){a?(d.send({err:"Unable to query."}),console.log(a)):(d.send({distributors:b}),console.log("Queried distributors."),console.log(b))}))})}
function actionAddCollectors(b,d,a){b=[];var c=["manufacture_date","manufacturer","model","series"];if(Array.isArray(a.collectors)){a=$jscomp.makeIterator(a.collectors);for(var e=a.next();!e.done;e=a.next())if(e=e.value,"object"===typeof e){var f={};if("object"===typeof e.device_info){var g=e.device_info;f.device_info={};for(var h=$jscomp.makeIterator(c),k=h.next();!k.done;k=h.next())k=k.value,"string"===typeof g[k]&&100>g[k].length&&(f.device_info[k]=g[k])}"string"===typeof e.name&&100>e.name.length&&
(f.name=e.name);f.value=0;f.smart=sortify(e.name);b.push(f)}r.table("Collectors").insert(b).run(CONNECTION,function(a,b){d.send(a?{err:"Could not create collectors."}:{})})}}function sortify(b){var d=0;if(b=b.match(/([A-Za-z]+|[0-9]+|.+?)/g))for(var a=0;a<b.length;a++){var c=b[a];if(c.match(/^[A-Za-z]+$/))for(var e in c)d+=c.charCodeAt(e);else if(c.match(/^[0-9]+$/))d+=1*c;else for(e in c)d+=c.charCodeAt(e)}return d}
function actionAddCollators(b,d,a){if(Array.isArray(a.collators)){var c=[];b=$jscomp.makeIterator(a.collators);for(a=b.next();!a.done;a=b.next()){var e=a.value;a={};"string"===typeof e.name&&e.name.length&&(a.name=e.name);if(Array.isArray(e.filters))for(var f=[],e=$jscomp.makeIterator(e.filters),g=e.next();!g.done;g=e.next())g=g.value,"string"===typeof g&&-1==f.indexOf(g)&&f.push(g);a.filters=f;c.push(a)}}r.table("Collators").insert(c).run(CONNECTION,function(a,b){a?(d.send({err:"Unable to create collators."}),
console.log(a)):(d.send({}),console.log("Created collators."))})}
function actionAddDistributors(b,d,a){if(Array.isArray(a.distributors)){b=[];a=$jscomp.makeIterator(a.distributors);for(var c=a.next();!c.done;c=a.next()){var e=c.value,c={sources:[]};if(Array.isArray(e.sources))for(var e=$jscomp.makeIterator(e.sources),f=e.next();!f.done;f=e.next())c.sources.push(f.value);b.push(c)}r.table("Distributors").insert(b).run(CONNECTION,function(a,b){a?(d.send({err:"Error creating distributors."}),console.log(a)):(d.send({}),console.log("Created distributors."))})}}
function actionAddFilters(b,d,a){function c(a){d.send({err:a});console.log(a)}if(Array.isArray(a.filters)){b=[];a=$jscomp.makeIterator(a.filters);for(var e=a.next();!e.done;e=a.next()){var e=e.value,f={};"string"===typeof e.name&&(f.name=e.name);if("string"===typeof e.code){var g=function(a,b){var e="undefined"==typeof b;if(e||"number"!==typeof a[b]&&"string"!==typeof a[b])if(Array.isArray(a))Array.isArray(a)&&(console.log("array: "+b),COMPARATORS.includes(b)?2!=a.length&&c("All comparators expect 2 parameters. Found "+
a.length):c("Invalid comparator."));else if(e||!b||OPERATORS.includes(b)){var d=Object.keys(a);console.log(e&&1!=d.length);if(e&&1!=d.length)c("Root object must contain exactly one object, not "+d.length);else if(e||2===d.length)for(e=$jscomp.makeIterator(d),d=e.next();!d.done;d=e.next())if(d=d.value,COMPARATORS.includes(d))g(a[d],d);else if(OPERATORS.includes(d))g(a[d],d);else{c("Invalid comparator or operator.");break}else c("Operator "+b+" expects 2 parameters, not "+d.length)}else c("Not a valid operator.");
else COMPARATORS.includes(b)||c("All numbers and strings must reside in comparators.")},h=e.code,k;try{k=JSON.parse(h)}catch(l){c("Invalid JSON.");return}console.log(k);g(k);f.code=e.code;f.json=k}b.push(f)}r.table("Filters").insert(b).run(CONNECTION,function(a,b){a?(d.send({err:"Error creating filters."}),console.log(a)):(d.send({}),console.log("Created filters."))})}}
function actionModDistributors(b,d,a){if(Array.isArray(a.distributors)){b=[];a=$jscomp.makeIterator(a.distributors);for(var c=a.next();!c.done;c=a.next()){var e=c.value,c={sources:[]};if(Array.isArray(e.sources))for(var e=$jscomp.makeIterator(e.sources),f=e.next();!f.done;f=e.next())c.sources.push(f.value);b.push(c)}r.table("Distributors").update(b).run(CONNECTION,function(a,b){a?(d.send({err:"Error updating distributors."}),console.log(a)):(d.send({}),console.log("Updated distributors."))})}};
