var r=require("rethinkdb");function buildFilterReferenceCounterQuery(b){var a=r.table("Filters");Array.isArray(b)&&(a=a.filter(function(a){return r.expr(b).contains(a("id"))}));return a=a.map(function(a){return{id:a("id"),refcount:r.table("Collators").group("id")("filters")(0).contains(a("id")).ungroup()("reduction").filter(function(a){return a.eq(!0)}).count()}})}
function buildCollatorReferenceCounterQuery(b){var a=r.table("Collators");Array.isArray(b)&&(a=a.filter(function(a){return r.expr(b).contains(a("id"))}));return a=a.map(function(a){return{id:a("id"),refcount:r.table("Distributors").group("id")("collators")(0).contains(a("id")).ungroup()("reduction").filter(function(a){return a.eq(!0)}).count()}})}
function buildFilterReferrerListerQuery(b){var a=r.table("Filters");Array.isArray(b)&&(a=a.filter(function(a){return r.expr(b).contains(a("id"))}));return a=a.map(function(a){return{id:a("id"),referrers:r.db("LiotR").table("Collators").filter(function(b){return b("filters").contains(a("id"))}).merge(function(a){return{filtrets:r.table("Filters").getAll(r.args(a("filters"))).coerceTo("array")}}).coerceTo("array")}})}
function buildFilterDistributorListerQuery(b){var a=r.table("Filters");Array.isArray(b)&&(a=a.filter(function(a){return r.expr(b).contains(a("id"))}));return a=a.map(function(a){return{id:a("id"),referrers:r.db("LiotR").table("Collators").filter(function(b){return b("filters").contains(a("id"))}).merge(function(a){return{filtrets:r.table("Filters").getAll(r.args(a("filters"))).coerceTo("array")}}).coerceTo("array")}})}
module.exports={buildFilterReferrerListerQuery:buildFilterReferrerListerQuery,buildFilterReferenceCounterQuery:buildFilterReferenceCounterQuery,buildFilterDistributorListerQuery:buildFilterDistributorListerQuery,buildCollatorReferenceCounterQuery:buildCollatorReferenceCounterQuery};
