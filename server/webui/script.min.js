var $jscomp = { scope: {} };
$jscomp.defineProperty =
  "function" == typeof Object.defineProperties
    ? Object.defineProperty
    : function (a, b, d) {
        if (d.get || d.set)
          throw new TypeError("ES3 does not support getters and setters.");
        a != Array.prototype && a != Object.prototype && (a[b] = d.value);
      };
$jscomp.getGlobal = function (a) {
  return "undefined" != typeof window && window === a
    ? a
    : "undefined" != typeof global && null != global
    ? global
    : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.symbolCounter_ = 0;
$jscomp.Symbol = function (a) {
  return $jscomp.SYMBOL_PREFIX + (a || "") + $jscomp.symbolCounter_++;
};
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var a = $jscomp.global.Symbol.iterator;
  a || (a = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
  "function" != typeof Array.prototype[a] &&
    $jscomp.defineProperty(Array.prototype, a, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.arrayIterator(this);
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.arrayIterator = function (a) {
  var b = 0;
  return $jscomp.iteratorPrototype(function () {
    return b < a.length ? { done: !1, value: a[b++] } : { done: !0 };
  });
};
$jscomp.iteratorPrototype = function (a) {
  $jscomp.initSymbolIterator();
  a = { next: a };
  a[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return a;
};
$jscomp.makeIterator = function (a) {
  $jscomp.initSymbolIterator();
  var b = a[Symbol.iterator];
  return b ? b.call(a) : $jscomp.arrayIterator(a);
};
function grab(a, b) {
  return "string" === typeof a ? (grab(b) || document).getElementById(a) : a;
}
function bind(a, b, d) {
  a.addEventListener(b, d);
}
function load(a) {
  bind(window, "DOMContentLoaded", a);
}
function namify(a, b, d) {
  var f = xss(a.name || ""),
    e = xss(a.id);
  a =
    "<a class='title-edit" +
    (d ? " disabled" : "") +
    "' href=\"/" +
    b +
    "s/edit?id=" +
    a.id +
    '">edit' +
    (d ? "ing" : "") +
    "</a>";
  return (
    (f.length ? f : "<i>Unnamed " + b[0].toUpperCase() + b.substr(1) + "</i>") +
    a +
    " <span class='name-id'>[" +
    e +
    "]</span>"
  );
}
function appendCollators(a, b, d) {
  for (var f = 0; f < a.length; f++) {
    var e = a[f],
      c = nelem("div");
    addc(c, "bubble");
    var g = nelem("div");
    addc(g, "bubble-top");
    c.appendChild(g);
    var h = nelem("label");
    h.innerHTML = namify(e, "collator", d == e.id);
    nelem("label").innerHTML = xss(e.id);
    for (
      var k = nelem("label"),
        m = "",
        n = $jscomp.makeIterator(e.filtrets),
        l = n.next();
      !l.done;
      l = n.next()
    )
      (l = l.value), (m += (l.name || l.id.substring(0, 10)) + ", ");
    m = "(" + m.substring(0, m.length - 2) + ")";
    k.innerHTML = xss(m);
    g.appendChild(h);
    g = $jscomp.makeIterator([]);
    for (h = g.next(); !h.done; h = g.next()) c.appendChild(h.value);
    b.appendChild(c);
    appendFilters(e.filtrets, c, d);
    appendDropper(c);
    appendSpecifics(c, e.id, "collator");
  }
  a.length || appendPlaceholder("collators", b);
}
function appendPlaceholder(a, b) {
  var d = nelem("div");
  addc(d, "placehodler");
  d.innerHTML = "No " + a;
  b.appendChild(d);
}
function appendFilters(a, b, d) {
  for (var f = 0; f < a.length; f++) {
    var e = a[f],
      c = nelem("div");
    addc(c, "bubble");
    var g = nelem("div");
    addc(g, "bubble-top");
    c.appendChild(g);
    var h = nelem("label");
    h.innerHTML = namify(e, "filter", d == e.id);
    nelem("label").innerHTML = xss(e.id);
    var k = nelem("pre");
    k.innerHTML = codify(xss(e.code));
    g.appendChild(h);
    c.appendChild(k);
    b.appendChild(c);
    appendDropper(c);
    appendSpecifics(c, e.id, "filter");
  }
  a.length || appendPlaceholder("filters", b);
}
function appendCollectors(a, b, d) {
  for (var f = 0; f < a.length; f++) {
    var e = a[f],
      c = nelem("div");
    addc(c, "bubble");
    var g = nelem("div");
    addc(g, "bubble-top");
    c.appendChild(g);
    var h = nelem("label");
    h.innerHTML = namify(e, "collector", d == e.id);
    nelem("label").innerHTML = xss(e.id);
    var k = nelem("pre");
    k.innerHTML = valify(xss(JSON.stringify(e, null, 3)));
    g.appendChild(h);
    c.appendChild(k);
    b.appendChild(c);
    appendDropper(c);
    appendSpecifics(c, e.id, "collector");
  }
  a.length || appendPlaceholder("collectors", b);
}
function appendSpecifics(a, b, d) {}
function stringValue(a) {
  switch (typeof a) {
    case "object":
      a = JSON.stringify(a);
    case "string":
      if (30 > a.length) 0 == a.length && (a = "NO VALUE");
      else return a.substring(0, 27) + "...";
      break;
    case "number":
      return a + "";
  }
  return a;
}
function codify(a) {
  return (a = a
    .replace(/([:,]) ([0-9]+)(,|\n| \])/g, "$1 %%n%%$2%%n%%$3")
    .replace(/"(\$.+?)"/g, "%%v%%$1%%v%%")
    .replace(/^(\s+)"([A-Z]+)"/gm, "$1%%c%%$2%%c%%")
    .replace(/"([^$].+?)"/g, "%%s%%$1%%s%%")
    .replace(/%%n%%(.+?)%%n%%/g, '<span class="number">$1</span>')
    .replace(/%%s%%(.+?)%%s%%/g, '<span class="string">$1</span>')
    .replace(/%%c%%(.+?)%%c%%/g, '<span class="command">$1</span>')
    .replace(/%%v%%(.+?)%%v%%/g, '<span class="variable">$1</span>'));
}
function valify(a) {
  return (a = a
    .replace(/([:,]) ([0-9]+)(,|\n| \])/g, "$1 %%n%%$2%%n%%$3")
    .replace(/"(\$.+?)"/g, "%%v%%$1%%v%%")
    .replace(/^(\s+)"([A-Z]+)"/gm, "$1%%c%%$2%%c%%")
    .replace(/"([^$].+?)"/g, "%%s%%$1%%s%%")
    .replace(/%%n%%(.+?)%%n%%/g, '<span class="number">$1</span>')
    .replace(
      /%%s%%([a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12})%%s%%/g,
      '<span class="id">$1</span>'
    )
    .replace(/%%s%%(.+?)%%s%%/g, '<span class="string">$1</span>')
    .replace(/%%c%%(.+?)%%c%%/g, '<span class="command">$1</span>')
    .replace(/%%v%%(.+?)%%v%%/g, '<span class="variable">$1</span>')
    .replace(
      /([:,]) (true|false)(,|\n| \])/g,
      '$1 <span class="binary">$2$3</span>'
    ));
}
function appendDropper(a) {
  var b = nelem("div");
  b.innerHTML = "V";
  addc(b, "dropper");
  bind(a.children[0], "click", function (b) {
    togc(a, "dropped");
    return !1;
  });
  a.appendChild(b);
}
function bindBubble(a, b) {
  bind(a, "click", function () {
    location.href = "/filters/edit?id=" + b.id;
  });
}
function getPageId() {
  var a = location.href.match(/\?id=(.+)$/);
  return a ? a[1] : null;
}
