var COMPARATORS="EQUALS NEQUALS TFEQUALS TFNEQUALS OVER OVEROR UNDER UNDEROR".split(" "),OPERATORS="AND OR NAND NOR XOR SAME".split(" "),r=require("rethinkdb"),express=require("express"),bodyParser=require("body-parser"),validUrl=require("valid-url"),request=require("request"),app=express(),fs=require("fs"),CONFIG={port:7475},sinceLast=0,counterval=setInterval(counter,1E3);
function counter(){process.stdout.clearLine();process.stdout.cursorTo(0);process.stdout.write("QPS: "+sinceLast);sinceLast=0}app.use(bodyParser.json());app.use(function(b,a,c){a.header("Access-Control-Allow-Origin","*");a.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept");c()});var kRETURN_CHANGES={return_changes:!0},ADMINACTIONS={},PUBLICACTIONS={};readConfig();
function readConfig(){fs.readFile("liot-server-conf.json",function(b,a){if(a){var c=JSON.parse(a.toString());c.port&&(CONFIG.port=c.port);console.log(c)}startRethinkServer();launchHttpServer()})}
function startRethinkServer(){r.connect({host:"localhost"},function(b,a){b||!a?console.log("Cannot connect to RethinkDB"):r.dbList().contains("LiotR")["do"](function(a){return r.branch(a,{dbs_created:0},r.dbCreate("LiotR"))}).run(a,function(b,d){if(b||!a)return console.log("Could not ensure existence of database for Liot R."),!1;CONNECTION=a;a.use("LiotR");d.dbs_created?console.log("Created database for Liot R."):console.log("Found database for Liot R.");console.log("Connected to database for Liot R.");
return!0})})}function launchHttpServer(){app.post("/",rcvdPost);app.listen(CONFIG.port)}function rcvdPost(b,a){var c=b.connection.remoteAddress.match(/^(127.0.0.1|::ffff:127.0.0.1|::1)$/)&&!0,d=b.body.action;a.header("Access-Control-Allow-Origin","*");if(d){var e=b.body;if(c&&d in ADMINACTIONS)ADMINACTIONS[d](b,a,e);else if(d in PUBLICACTIONS)PUBLICACTIONS[d](b,a,e)}sinceLast++};
